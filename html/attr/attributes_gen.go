// Code generated by blocks; DO NOT EDIT.
package attr 

func Accept(value any) Attributes {
	return Attributes{AttrPair{Key: "accept", Value: value}}
}
func (a Attributes) Accept(value any) Attributes {
	return append(a, AttrPair{Key: "accept", Value: value})
}
func AcceptCharset(value any) Attributes {
	return Attributes{AttrPair{Key: "accept-charset", Value: value}}
}
func (a Attributes) AcceptCharset(value any) Attributes {
	return append(a, AttrPair{Key: "accept-charset", Value: value})
}
func Accesskey(value any) Attributes {
	return Attributes{AttrPair{Key: "accesskey", Value: value}}
}
func (a Attributes) Accesskey(value any) Attributes {
	return append(a, AttrPair{Key: "accesskey", Value: value})
}
func Action(value any) Attributes {
	return Attributes{AttrPair{Key: "action", Value: value}}
}
func (a Attributes) Action(value any) Attributes {
	return append(a, AttrPair{Key: "action", Value: value})
}
func Align(value any) Attributes {
	return Attributes{AttrPair{Key: "align", Value: value}}
}
func (a Attributes) Align(value any) Attributes {
	return append(a, AttrPair{Key: "align", Value: value})
}
func Allow(value any) Attributes {
	return Attributes{AttrPair{Key: "allow", Value: value}}
}
func (a Attributes) Allow(value any) Attributes {
	return append(a, AttrPair{Key: "allow", Value: value})
}
func Alt(value any) Attributes {
	return Attributes{AttrPair{Key: "alt", Value: value}}
}
func (a Attributes) Alt(value any) Attributes {
	return append(a, AttrPair{Key: "alt", Value: value})
}
func Async(value any) Attributes {
	return Attributes{AttrPair{Key: "async", Value: value}}
}
func (a Attributes) Async(value any) Attributes {
	return append(a, AttrPair{Key: "async", Value: value})
}
func Autocapitalize(value any) Attributes {
	return Attributes{AttrPair{Key: "autocapitalize", Value: value}}
}
func (a Attributes) Autocapitalize(value any) Attributes {
	return append(a, AttrPair{Key: "autocapitalize", Value: value})
}
func Autocomplete(value any) Attributes {
	return Attributes{AttrPair{Key: "autocomplete", Value: value}}
}
func (a Attributes) Autocomplete(value any) Attributes {
	return append(a, AttrPair{Key: "autocomplete", Value: value})
}
func Autofocus(value any) Attributes {
	return Attributes{AttrPair{Key: "autofocus", Value: value}}
}
func (a Attributes) Autofocus(value any) Attributes {
	return append(a, AttrPair{Key: "autofocus", Value: value})
}
func Autoplay(value any) Attributes {
	return Attributes{AttrPair{Key: "autoplay", Value: value}}
}
func (a Attributes) Autoplay(value any) Attributes {
	return append(a, AttrPair{Key: "autoplay", Value: value})
}
func Background(value any) Attributes {
	return Attributes{AttrPair{Key: "background", Value: value}}
}
func (a Attributes) Background(value any) Attributes {
	return append(a, AttrPair{Key: "background", Value: value})
}
func Bgcolor(value any) Attributes {
	return Attributes{AttrPair{Key: "bgcolor", Value: value}}
}
func (a Attributes) Bgcolor(value any) Attributes {
	return append(a, AttrPair{Key: "bgcolor", Value: value})
}
func Border(value any) Attributes {
	return Attributes{AttrPair{Key: "border", Value: value}}
}
func (a Attributes) Border(value any) Attributes {
	return append(a, AttrPair{Key: "border", Value: value})
}
func Buffered(value any) Attributes {
	return Attributes{AttrPair{Key: "buffered", Value: value}}
}
func (a Attributes) Buffered(value any) Attributes {
	return append(a, AttrPair{Key: "buffered", Value: value})
}
func Capture(value any) Attributes {
	return Attributes{AttrPair{Key: "capture", Value: value}}
}
func (a Attributes) Capture(value any) Attributes {
	return append(a, AttrPair{Key: "capture", Value: value})
}
func Challenge(value any) Attributes {
	return Attributes{AttrPair{Key: "challenge", Value: value}}
}
func (a Attributes) Challenge(value any) Attributes {
	return append(a, AttrPair{Key: "challenge", Value: value})
}
func Charset(value any) Attributes {
	return Attributes{AttrPair{Key: "charset", Value: value}}
}
func (a Attributes) Charset(value any) Attributes {
	return append(a, AttrPair{Key: "charset", Value: value})
}
func Checked(value any) Attributes {
	return Attributes{AttrPair{Key: "checked", Value: value}}
}
func (a Attributes) Checked(value any) Attributes {
	return append(a, AttrPair{Key: "checked", Value: value})
}
func Cite(value any) Attributes {
	return Attributes{AttrPair{Key: "cite", Value: value}}
}
func (a Attributes) Cite(value any) Attributes {
	return append(a, AttrPair{Key: "cite", Value: value})
}
func Class(value any) Attributes {
	return Attributes{AttrPair{Key: "class", Value: value}}
}
func (a Attributes) Class(value any) Attributes {
	return append(a, AttrPair{Key: "class", Value: value})
}
func Code(value any) Attributes {
	return Attributes{AttrPair{Key: "code", Value: value}}
}
func (a Attributes) Code(value any) Attributes {
	return append(a, AttrPair{Key: "code", Value: value})
}
func Codebase(value any) Attributes {
	return Attributes{AttrPair{Key: "codebase", Value: value}}
}
func (a Attributes) Codebase(value any) Attributes {
	return append(a, AttrPair{Key: "codebase", Value: value})
}
func Color(value any) Attributes {
	return Attributes{AttrPair{Key: "color", Value: value}}
}
func (a Attributes) Color(value any) Attributes {
	return append(a, AttrPair{Key: "color", Value: value})
}
func Cols(value any) Attributes {
	return Attributes{AttrPair{Key: "cols", Value: value}}
}
func (a Attributes) Cols(value any) Attributes {
	return append(a, AttrPair{Key: "cols", Value: value})
}
func Colspan(value any) Attributes {
	return Attributes{AttrPair{Key: "colspan", Value: value}}
}
func (a Attributes) Colspan(value any) Attributes {
	return append(a, AttrPair{Key: "colspan", Value: value})
}
func Content(value any) Attributes {
	return Attributes{AttrPair{Key: "content", Value: value}}
}
func (a Attributes) Content(value any) Attributes {
	return append(a, AttrPair{Key: "content", Value: value})
}
func Contenteditable(value any) Attributes {
	return Attributes{AttrPair{Key: "contenteditable", Value: value}}
}
func (a Attributes) Contenteditable(value any) Attributes {
	return append(a, AttrPair{Key: "contenteditable", Value: value})
}
func Contextmenu(value any) Attributes {
	return Attributes{AttrPair{Key: "contextmenu", Value: value}}
}
func (a Attributes) Contextmenu(value any) Attributes {
	return append(a, AttrPair{Key: "contextmenu", Value: value})
}
func Controls(value any) Attributes {
	return Attributes{AttrPair{Key: "controls", Value: value}}
}
func (a Attributes) Controls(value any) Attributes {
	return append(a, AttrPair{Key: "controls", Value: value})
}
func Coords(value any) Attributes {
	return Attributes{AttrPair{Key: "coords", Value: value}}
}
func (a Attributes) Coords(value any) Attributes {
	return append(a, AttrPair{Key: "coords", Value: value})
}
func Crossorigin(value any) Attributes {
	return Attributes{AttrPair{Key: "crossorigin", Value: value}}
}
func (a Attributes) Crossorigin(value any) Attributes {
	return append(a, AttrPair{Key: "crossorigin", Value: value})
}
func Data(value any) Attributes {
	return Attributes{AttrPair{Key: "data", Value: value}}
}
func (a Attributes) Data(value any) Attributes {
	return append(a, AttrPair{Key: "data", Value: value})
}
func Datetime(value any) Attributes {
	return Attributes{AttrPair{Key: "datetime", Value: value}}
}
func (a Attributes) Datetime(value any) Attributes {
	return append(a, AttrPair{Key: "datetime", Value: value})
}
func Decoding(value any) Attributes {
	return Attributes{AttrPair{Key: "decoding", Value: value}}
}
func (a Attributes) Decoding(value any) Attributes {
	return append(a, AttrPair{Key: "decoding", Value: value})
}
func Default(value any) Attributes {
	return Attributes{AttrPair{Key: "default", Value: value}}
}
func (a Attributes) Default(value any) Attributes {
	return append(a, AttrPair{Key: "default", Value: value})
}
func Defer(value any) Attributes {
	return Attributes{AttrPair{Key: "defer", Value: value}}
}
func (a Attributes) Defer(value any) Attributes {
	return append(a, AttrPair{Key: "defer", Value: value})
}
func Dir(value any) Attributes {
	return Attributes{AttrPair{Key: "dir", Value: value}}
}
func (a Attributes) Dir(value any) Attributes {
	return append(a, AttrPair{Key: "dir", Value: value})
}
func Dirname(value any) Attributes {
	return Attributes{AttrPair{Key: "dirname", Value: value}}
}
func (a Attributes) Dirname(value any) Attributes {
	return append(a, AttrPair{Key: "dirname", Value: value})
}
func Disabled(value any) Attributes {
	return Attributes{AttrPair{Key: "disabled", Value: value}}
}
func (a Attributes) Disabled(value any) Attributes {
	return append(a, AttrPair{Key: "disabled", Value: value})
}
func Download(value any) Attributes {
	return Attributes{AttrPair{Key: "download", Value: value}}
}
func (a Attributes) Download(value any) Attributes {
	return append(a, AttrPair{Key: "download", Value: value})
}
func Draggable(value any) Attributes {
	return Attributes{AttrPair{Key: "draggable", Value: value}}
}
func (a Attributes) Draggable(value any) Attributes {
	return append(a, AttrPair{Key: "draggable", Value: value})
}
func Enctype(value any) Attributes {
	return Attributes{AttrPair{Key: "enctype", Value: value}}
}
func (a Attributes) Enctype(value any) Attributes {
	return append(a, AttrPair{Key: "enctype", Value: value})
}
func For(value any) Attributes {
	return Attributes{AttrPair{Key: "for", Value: value}}
}
func (a Attributes) For(value any) Attributes {
	return append(a, AttrPair{Key: "for", Value: value})
}
func Form(value any) Attributes {
	return Attributes{AttrPair{Key: "form", Value: value}}
}
func (a Attributes) Form(value any) Attributes {
	return append(a, AttrPair{Key: "form", Value: value})
}
func Formaction(value any) Attributes {
	return Attributes{AttrPair{Key: "formaction", Value: value}}
}
func (a Attributes) Formaction(value any) Attributes {
	return append(a, AttrPair{Key: "formaction", Value: value})
}
func Formenctype(value any) Attributes {
	return Attributes{AttrPair{Key: "formenctype", Value: value}}
}
func (a Attributes) Formenctype(value any) Attributes {
	return append(a, AttrPair{Key: "formenctype", Value: value})
}
func Formmethod(value any) Attributes {
	return Attributes{AttrPair{Key: "formmethod", Value: value}}
}
func (a Attributes) Formmethod(value any) Attributes {
	return append(a, AttrPair{Key: "formmethod", Value: value})
}
func Formnovalidate(value any) Attributes {
	return Attributes{AttrPair{Key: "formnovalidate", Value: value}}
}
func (a Attributes) Formnovalidate(value any) Attributes {
	return append(a, AttrPair{Key: "formnovalidate", Value: value})
}
func Formtarget(value any) Attributes {
	return Attributes{AttrPair{Key: "formtarget", Value: value}}
}
func (a Attributes) Formtarget(value any) Attributes {
	return append(a, AttrPair{Key: "formtarget", Value: value})
}
func Headers(value any) Attributes {
	return Attributes{AttrPair{Key: "headers", Value: value}}
}
func (a Attributes) Headers(value any) Attributes {
	return append(a, AttrPair{Key: "headers", Value: value})
}
func Height(value any) Attributes {
	return Attributes{AttrPair{Key: "height", Value: value}}
}
func (a Attributes) Height(value any) Attributes {
	return append(a, AttrPair{Key: "height", Value: value})
}
func Hidden(value any) Attributes {
	return Attributes{AttrPair{Key: "hidden", Value: value}}
}
func (a Attributes) Hidden(value any) Attributes {
	return append(a, AttrPair{Key: "hidden", Value: value})
}
func High(value any) Attributes {
	return Attributes{AttrPair{Key: "high", Value: value}}
}
func (a Attributes) High(value any) Attributes {
	return append(a, AttrPair{Key: "high", Value: value})
}
func Href(value any) Attributes {
	return Attributes{AttrPair{Key: "href", Value: value}}
}
func (a Attributes) Href(value any) Attributes {
	return append(a, AttrPair{Key: "href", Value: value})
}
func Hreflang(value any) Attributes {
	return Attributes{AttrPair{Key: "hreflang", Value: value}}
}
func (a Attributes) Hreflang(value any) Attributes {
	return append(a, AttrPair{Key: "hreflang", Value: value})
}
func HttpEquiv(value any) Attributes {
	return Attributes{AttrPair{Key: "http-equiv", Value: value}}
}
func (a Attributes) HttpEquiv(value any) Attributes {
	return append(a, AttrPair{Key: "http-equiv", Value: value})
}
func Id(value any) Attributes {
	return Attributes{AttrPair{Key: "id", Value: value}}
}
func (a Attributes) Id(value any) Attributes {
	return append(a, AttrPair{Key: "id", Value: value})
}
func Integrity(value any) Attributes {
	return Attributes{AttrPair{Key: "integrity", Value: value}}
}
func (a Attributes) Integrity(value any) Attributes {
	return append(a, AttrPair{Key: "integrity", Value: value})
}
func Inputmode(value any) Attributes {
	return Attributes{AttrPair{Key: "inputmode", Value: value}}
}
func (a Attributes) Inputmode(value any) Attributes {
	return append(a, AttrPair{Key: "inputmode", Value: value})
}
func Ismap(value any) Attributes {
	return Attributes{AttrPair{Key: "ismap", Value: value}}
}
func (a Attributes) Ismap(value any) Attributes {
	return append(a, AttrPair{Key: "ismap", Value: value})
}
func Itemprop(value any) Attributes {
	return Attributes{AttrPair{Key: "itemprop", Value: value}}
}
func (a Attributes) Itemprop(value any) Attributes {
	return append(a, AttrPair{Key: "itemprop", Value: value})
}
func Keytype(value any) Attributes {
	return Attributes{AttrPair{Key: "keytype", Value: value}}
}
func (a Attributes) Keytype(value any) Attributes {
	return append(a, AttrPair{Key: "keytype", Value: value})
}
func Kind(value any) Attributes {
	return Attributes{AttrPair{Key: "kind", Value: value}}
}
func (a Attributes) Kind(value any) Attributes {
	return append(a, AttrPair{Key: "kind", Value: value})
}
func Label(value any) Attributes {
	return Attributes{AttrPair{Key: "label", Value: value}}
}
func (a Attributes) Label(value any) Attributes {
	return append(a, AttrPair{Key: "label", Value: value})
}
func Lang(value any) Attributes {
	return Attributes{AttrPair{Key: "lang", Value: value}}
}
func (a Attributes) Lang(value any) Attributes {
	return append(a, AttrPair{Key: "lang", Value: value})
}
func List(value any) Attributes {
	return Attributes{AttrPair{Key: "list", Value: value}}
}
func (a Attributes) List(value any) Attributes {
	return append(a, AttrPair{Key: "list", Value: value})
}
func Loop(value any) Attributes {
	return Attributes{AttrPair{Key: "loop", Value: value}}
}
func (a Attributes) Loop(value any) Attributes {
	return append(a, AttrPair{Key: "loop", Value: value})
}
func Low(value any) Attributes {
	return Attributes{AttrPair{Key: "low", Value: value}}
}
func (a Attributes) Low(value any) Attributes {
	return append(a, AttrPair{Key: "low", Value: value})
}
func Max(value any) Attributes {
	return Attributes{AttrPair{Key: "max", Value: value}}
}
func (a Attributes) Max(value any) Attributes {
	return append(a, AttrPair{Key: "max", Value: value})
}
func Maxlength(value any) Attributes {
	return Attributes{AttrPair{Key: "maxlength", Value: value}}
}
func (a Attributes) Maxlength(value any) Attributes {
	return append(a, AttrPair{Key: "maxlength", Value: value})
}
func Minlength(value any) Attributes {
	return Attributes{AttrPair{Key: "minlength", Value: value}}
}
func (a Attributes) Minlength(value any) Attributes {
	return append(a, AttrPair{Key: "minlength", Value: value})
}
func Media(value any) Attributes {
	return Attributes{AttrPair{Key: "media", Value: value}}
}
func (a Attributes) Media(value any) Attributes {
	return append(a, AttrPair{Key: "media", Value: value})
}
func Method(value any) Attributes {
	return Attributes{AttrPair{Key: "method", Value: value}}
}
func (a Attributes) Method(value any) Attributes {
	return append(a, AttrPair{Key: "method", Value: value})
}
func Min(value any) Attributes {
	return Attributes{AttrPair{Key: "min", Value: value}}
}
func (a Attributes) Min(value any) Attributes {
	return append(a, AttrPair{Key: "min", Value: value})
}
func Multiple(value any) Attributes {
	return Attributes{AttrPair{Key: "multiple", Value: value}}
}
func (a Attributes) Multiple(value any) Attributes {
	return append(a, AttrPair{Key: "multiple", Value: value})
}
func Muted(value any) Attributes {
	return Attributes{AttrPair{Key: "muted", Value: value}}
}
func (a Attributes) Muted(value any) Attributes {
	return append(a, AttrPair{Key: "muted", Value: value})
}
func Name(value any) Attributes {
	return Attributes{AttrPair{Key: "name", Value: value}}
}
func (a Attributes) Name(value any) Attributes {
	return append(a, AttrPair{Key: "name", Value: value})
}
func Novalidate(value any) Attributes {
	return Attributes{AttrPair{Key: "novalidate", Value: value}}
}
func (a Attributes) Novalidate(value any) Attributes {
	return append(a, AttrPair{Key: "novalidate", Value: value})
}
func Open(value any) Attributes {
	return Attributes{AttrPair{Key: "open", Value: value}}
}
func (a Attributes) Open(value any) Attributes {
	return append(a, AttrPair{Key: "open", Value: value})
}
func Optimum(value any) Attributes {
	return Attributes{AttrPair{Key: "optimum", Value: value}}
}
func (a Attributes) Optimum(value any) Attributes {
	return append(a, AttrPair{Key: "optimum", Value: value})
}
func Pattern(value any) Attributes {
	return Attributes{AttrPair{Key: "pattern", Value: value}}
}
func (a Attributes) Pattern(value any) Attributes {
	return append(a, AttrPair{Key: "pattern", Value: value})
}
func Ping(value any) Attributes {
	return Attributes{AttrPair{Key: "ping", Value: value}}
}
func (a Attributes) Ping(value any) Attributes {
	return append(a, AttrPair{Key: "ping", Value: value})
}
func Placeholder(value any) Attributes {
	return Attributes{AttrPair{Key: "placeholder", Value: value}}
}
func (a Attributes) Placeholder(value any) Attributes {
	return append(a, AttrPair{Key: "placeholder", Value: value})
}
func Playsinline(value any) Attributes {
	return Attributes{AttrPair{Key: "playsinline", Value: value}}
}
func (a Attributes) Playsinline(value any) Attributes {
	return append(a, AttrPair{Key: "playsinline", Value: value})
}
func Poster(value any) Attributes {
	return Attributes{AttrPair{Key: "poster", Value: value}}
}
func (a Attributes) Poster(value any) Attributes {
	return append(a, AttrPair{Key: "poster", Value: value})
}
func Preload(value any) Attributes {
	return Attributes{AttrPair{Key: "preload", Value: value}}
}
func (a Attributes) Preload(value any) Attributes {
	return append(a, AttrPair{Key: "preload", Value: value})
}
func Readonly(value any) Attributes {
	return Attributes{AttrPair{Key: "readonly", Value: value}}
}
func (a Attributes) Readonly(value any) Attributes {
	return append(a, AttrPair{Key: "readonly", Value: value})
}
func Referrerpolicy(value any) Attributes {
	return Attributes{AttrPair{Key: "referrerpolicy", Value: value}}
}
func (a Attributes) Referrerpolicy(value any) Attributes {
	return append(a, AttrPair{Key: "referrerpolicy", Value: value})
}
func Rel(value any) Attributes {
	return Attributes{AttrPair{Key: "rel", Value: value}}
}
func (a Attributes) Rel(value any) Attributes {
	return append(a, AttrPair{Key: "rel", Value: value})
}
func Required(value any) Attributes {
	return Attributes{AttrPair{Key: "required", Value: value}}
}
func (a Attributes) Required(value any) Attributes {
	return append(a, AttrPair{Key: "required", Value: value})
}
func Reversed(value any) Attributes {
	return Attributes{AttrPair{Key: "reversed", Value: value}}
}
func (a Attributes) Reversed(value any) Attributes {
	return append(a, AttrPair{Key: "reversed", Value: value})
}
func Role(value any) Attributes {
	return Attributes{AttrPair{Key: "role", Value: value}}
}
func (a Attributes) Role(value any) Attributes {
	return append(a, AttrPair{Key: "role", Value: value})
}
func Rows(value any) Attributes {
	return Attributes{AttrPair{Key: "rows", Value: value}}
}
func (a Attributes) Rows(value any) Attributes {
	return append(a, AttrPair{Key: "rows", Value: value})
}
func Rowspan(value any) Attributes {
	return Attributes{AttrPair{Key: "rowspan", Value: value}}
}
func (a Attributes) Rowspan(value any) Attributes {
	return append(a, AttrPair{Key: "rowspan", Value: value})
}
func Sandbox(value any) Attributes {
	return Attributes{AttrPair{Key: "sandbox", Value: value}}
}
func (a Attributes) Sandbox(value any) Attributes {
	return append(a, AttrPair{Key: "sandbox", Value: value})
}
func Scope(value any) Attributes {
	return Attributes{AttrPair{Key: "scope", Value: value}}
}
func (a Attributes) Scope(value any) Attributes {
	return append(a, AttrPair{Key: "scope", Value: value})
}
func Selected(value any) Attributes {
	return Attributes{AttrPair{Key: "selected", Value: value}}
}
func (a Attributes) Selected(value any) Attributes {
	return append(a, AttrPair{Key: "selected", Value: value})
}
func Shape(value any) Attributes {
	return Attributes{AttrPair{Key: "shape", Value: value}}
}
func (a Attributes) Shape(value any) Attributes {
	return append(a, AttrPair{Key: "shape", Value: value})
}
func Size(value any) Attributes {
	return Attributes{AttrPair{Key: "size", Value: value}}
}
func (a Attributes) Size(value any) Attributes {
	return append(a, AttrPair{Key: "size", Value: value})
}
func Sizes(value any) Attributes {
	return Attributes{AttrPair{Key: "sizes", Value: value}}
}
func (a Attributes) Sizes(value any) Attributes {
	return append(a, AttrPair{Key: "sizes", Value: value})
}
func Slot(value any) Attributes {
	return Attributes{AttrPair{Key: "slot", Value: value}}
}
func (a Attributes) Slot(value any) Attributes {
	return append(a, AttrPair{Key: "slot", Value: value})
}
func Span(value any) Attributes {
	return Attributes{AttrPair{Key: "span", Value: value}}
}
func (a Attributes) Span(value any) Attributes {
	return append(a, AttrPair{Key: "span", Value: value})
}
func Spellcheck(value any) Attributes {
	return Attributes{AttrPair{Key: "spellcheck", Value: value}}
}
func (a Attributes) Spellcheck(value any) Attributes {
	return append(a, AttrPair{Key: "spellcheck", Value: value})
}
func Src(value any) Attributes {
	return Attributes{AttrPair{Key: "src", Value: value}}
}
func (a Attributes) Src(value any) Attributes {
	return append(a, AttrPair{Key: "src", Value: value})
}
func Srcdoc(value any) Attributes {
	return Attributes{AttrPair{Key: "srcdoc", Value: value}}
}
func (a Attributes) Srcdoc(value any) Attributes {
	return append(a, AttrPair{Key: "srcdoc", Value: value})
}
func Srclang(value any) Attributes {
	return Attributes{AttrPair{Key: "srclang", Value: value}}
}
func (a Attributes) Srclang(value any) Attributes {
	return append(a, AttrPair{Key: "srclang", Value: value})
}
func Srcset(value any) Attributes {
	return Attributes{AttrPair{Key: "srcset", Value: value}}
}
func (a Attributes) Srcset(value any) Attributes {
	return append(a, AttrPair{Key: "srcset", Value: value})
}
func Start(value any) Attributes {
	return Attributes{AttrPair{Key: "start", Value: value}}
}
func (a Attributes) Start(value any) Attributes {
	return append(a, AttrPair{Key: "start", Value: value})
}
func Step(value any) Attributes {
	return Attributes{AttrPair{Key: "step", Value: value}}
}
func (a Attributes) Step(value any) Attributes {
	return append(a, AttrPair{Key: "step", Value: value})
}
func Style(value any) Attributes {
	return Attributes{AttrPair{Key: "style", Value: value}}
}
func (a Attributes) Style(value any) Attributes {
	return append(a, AttrPair{Key: "style", Value: value})
}
func Tabindex(value any) Attributes {
	return Attributes{AttrPair{Key: "tabindex", Value: value}}
}
func (a Attributes) Tabindex(value any) Attributes {
	return append(a, AttrPair{Key: "tabindex", Value: value})
}
func Target(value any) Attributes {
	return Attributes{AttrPair{Key: "target", Value: value}}
}
func (a Attributes) Target(value any) Attributes {
	return append(a, AttrPair{Key: "target", Value: value})
}
func Title(value any) Attributes {
	return Attributes{AttrPair{Key: "title", Value: value}}
}
func (a Attributes) Title(value any) Attributes {
	return append(a, AttrPair{Key: "title", Value: value})
}
func Translate(value any) Attributes {
	return Attributes{AttrPair{Key: "translate", Value: value}}
}
func (a Attributes) Translate(value any) Attributes {
	return append(a, AttrPair{Key: "translate", Value: value})
}
func Type(value any) Attributes {
	return Attributes{AttrPair{Key: "type", Value: value}}
}
func (a Attributes) Type(value any) Attributes {
	return append(a, AttrPair{Key: "type", Value: value})
}
func Usemap(value any) Attributes {
	return Attributes{AttrPair{Key: "usemap", Value: value}}
}
func (a Attributes) Usemap(value any) Attributes {
	return append(a, AttrPair{Key: "usemap", Value: value})
}
func Value(value any) Attributes {
	return Attributes{AttrPair{Key: "value", Value: value}}
}
func (a Attributes) Value(value any) Attributes {
	return append(a, AttrPair{Key: "value", Value: value})
}
func Width(value any) Attributes {
	return Attributes{AttrPair{Key: "width", Value: value}}
}
func (a Attributes) Width(value any) Attributes {
	return append(a, AttrPair{Key: "width", Value: value})
}
func Wrap(value any) Attributes {
	return Attributes{AttrPair{Key: "wrap", Value: value}}
}
func (a Attributes) Wrap(value any) Attributes {
	return append(a, AttrPair{Key: "wrap", Value: value})
}
